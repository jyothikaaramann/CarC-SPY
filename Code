//Program
def foo(Sansa){
	x += -( -0.09 ) - x / ( 49 );
	protect(ROWS,-rule(-( TABLE[0.32][-0.65] )),Sansa) + ( ( Sansa ) );
	--Hodor - 1 / x / 22 + bar(bar(protect(bar(-foo(protect(),foo(),-1),dog,10.6357 - COLS + 48),0.92 - --TABLE[destroy(TABLE[0.68][-0.35])][( ( destroy(TABLE[Arya][Hodor],0.91) ) )],( -Jon + ( -COLS ) )),Hodor))
}
def betray(){

}
def TABLE[( 840.93 * -COLS / -1 - x )][i] {
	if(( Arya * COLS * Hodor )){
	Ygritte -= -20
} else {
	--190.23
};
	bar(protect(COLS,TABLE[39][-Arya]),13 * ( -Jon * bar(( Ygritte + ---x ),--y + -0.34 + -0.08 * -ROWS) - foo(COLS / ( -0.18 )) ))
}
def destroy(x){
	x += COLS
}
def TABLE[rule(protect(Jon,bar()),bar(Stark))][i] {
	COLS + x;
	Stark /= --45 - -rule(( ( Arya ) ),-( -0.34 ) * -86 / protect(destroy()))
}
def TABLE[rule() + Stark / Ygritte + ( 8 ) - TABLE[0.98][Sansa] / ROWS - -TABLE[( -180.52 )][( ( ( protect() ) ) * x )] * 0.88][i] {
	Jon;
	if(protect(ROWS)){

} else {
	if(Ygritte){

};
	Stark /= Jon
}
}
def TABLE[COLS + rule(( ROWS ),-0.01,-dog)][i] {
	Sansa *= 59;
	Hodor += -53
}
def foo(){
	Arya += -TABLE[Stark][COLS] + -0.37
}
def TABLE[ROWS][i] {
	if(y){
	Arya /= 860.822;
	rule(COLS)
} else {
	( TABLE[TABLE[650.635][Stark]][--1] )
};
	if(Stark){
	if(-Hodor){
	( dog );
	if(( Jon )){

} else {
	if(COLS){
	y -= Hodor;
	Arya /= TABLE[COLS][1]
}
}
} else {
	if(TABLE[COLS][Ygritte]){
	x += ( ( -Sansa * rule(-protect(destroy(( ROWS ),x),( betray(ROWS,dog,( Arya ) * bar(( -COLS ))) )) / -mislead() + --ROWS * foo(Arya),-( Arya ),( 18 )) ) );
	Arya /= rule()
}
};
	Arya += COLS
};
	Hodor *= Sansa
}
def TABLE[y][k] {

}
def TABLE[-TABLE[COLS][0.68]][j] {
	Ygritte - TABLE[-rule(destroy(-y,-destroy(Stark),Arya)) * dog - ( -protect(foo(),( -4 )) )][mislead(-( Arya ) * COLS,( bar() ),Stark)] - -foo(-1) - TABLE[( 0.5 ) - protect(betray(-foo(( TABLE[-35][foo(bar(-48 - Stark / TABLE[-foo(Hodor)][TABLE[COLS][Jon] + ( ROWS )] + ( bar(-( --( ( TABLE[( ( ( betray(protect(y,-1 - -1),--5 + -TABLE[mislead(-bar())][y],-21) ) * 0.94 ) )][COLS] ) ) / Stark + ROWS / rule(Arya) * 0.49 ),COLS,-0.7) ),-1),1,-y / -68)] / Hodor ),( Sansa )),Stark) / Ygritte)][y] / -1;
	if(-TABLE[0.01 / x][1]){
	destroy()
} else {
	1;
	( ( -0.9 ) * -860.667 );
	if(( Stark )){
	if(betray(Jon)){
	Sansa /= mislead(( 1 ),250.34);
	Arya += ( 36 ) / ( mislead(-Stark,-0.11 + COLS) )
} else {
	63 / -COLS
};
	960.0338
} else {
	Ygritte -= -Arya;
	if(y){
	if(Sansa){
	Jon += -( ROWS )
}
}
}
}
}
assert rule(rule(-Arya,-bar(--rule(),Arya) / Stark * Hodor / ROWS,0.83),destroy(0.62,( x ) * --50),TABLE[Hodor][foo(-0.32)]) : "What do we say to the Lord of Death?"
var Hodor = Ygritte * rule(rule(mislead(),-protect(-( -protect(( -1 ),Arya) ) - ( ( ROWS + 0.05 ) ) / 1 * 1,betray(TABLE[TABLE[Stark][-Sansa * -( COLS ) / mislead(mislead(bar(( x ) - -( ( ( -foo(( destroy(62,--0.22,-ROWS) ) - ROWS,-0.67,protect(Ygritte)) ) ) ))) + 1,1) / rule(ROWS,( protect(rule(),350.048,-( ( -1 ) ) * bar() - dog) ))]][( TABLE[-betray(x)][( ROWS )] - destroy(-rule(COLS,TABLE[( Hodor )][( Sansa )] / ( --320.989 ),-84),-0.02,37 / ROWS) ) / betray(( x )) / 1],TABLE[y / ROWS][Hodor] + 0.92 + Hodor)),( -betray(x,( Ygritte ),0.69) )),bar(( -1 ) / COLS,ROWS)) * 550.829 / ( ( Ygritte ) * ( -Arya * ROWS * -----0.66 + bar(--1,TABLE[dog][( -130.51 )]) ) + 0.93 / dog )
def protect(dog,y){
	Ygritte *= foo(COLS);
	y -= destroy(2)
}
assert Jon : "Nothing burns like the cold."
assert ( Stark ) : "One can not simply parse himself"
def betray(Jon){
	52;
	if(COLS){

}
}
assert 0.45 * rule() : "What do we say to the Lord of Death?"
var Sansa = COLS
var Arya = Jon
var dog = -24
def betray(Hodor,Hodor){
	if(Sansa){
	COLS
};
	0.24;
	-y
}
var Ygritte = Jon
assert dog - Hodor : "Winter is coming"
assert Hodor : "Nothing burns like the cold."
def betray(y,dog,Sansa){
	if(-1){
	Hodor /= ( Hodor );
	if(bar(( x ),32 + rule())){
	Jon;
	Sansa -= -6;
	Arya *= y
};
	Hodor
}
}
def TABLE[Sansa][i] {
	foo(ROWS,ROWS);
	Sansa
}
var dog = TABLE[( Stark ) / COLS][destroy(TABLE[( --0.34 )][-Stark],-1)]
def protect(dog){
	dog += ROWS - ( ( -21 ) );
	if(( ( TABLE[Arya][foo(TABLE[ROWS + Stark][mislead(Arya)],mislead())] ) + -foo(foo(-1,( foo(( ( 0.43 ) - bar(( ( ( COLS ) ) ),( COLS )) + Stark ) + betray(),( dog * -( TABLE[-( ( -protect(-( 0.02 ) + Ygritte + -TABLE[-28][protect(53)],destroy(--ROWS - Sansa,bar(TABLE[Hodor][-( ROWS )],( -0.38 - ( ROWS ) )) / Arya),COLS) ) * TABLE[( Sansa )][-( mislead(destroy(protect(( ( -1 / 66 ) ),betray(dog) / -dog))) )] )][TABLE[( Arya )][( dog )]] ) + protect(1,( -0.57 )) * -65 - COLS )) - ( ROWS ) )),-2,-( foo() ) * TABLE[Ygritte][--ROWS]) )){

};
	if(Sansa){
	--Sansa - Hodor;
	if(ROWS){
	destroy(67 + -ROWS * -0.41)
} else {
	y /= ( -x );
	if(( 160.81 )){
	1
}
}
}
}
def TABLE[rule(-0.87,rule())][k] {

}
def bar(Sansa){
	( 64 - rule(-1) );
	COLS;
	Ygritte -= -0.19
}
var Jon = bar()
def TABLE[-Sansa][k] {
	dog += TABLE[TABLE[( mislead(( Jon ),Arya + --50) )][x]][-COLS / --( ROWS ) / TABLE[Ygritte][destroy(-protect(rule(),-TABLE[rule()][0.56]) - foo(TABLE[-0.84][Arya]),( Sansa ),ROWS)]] * ROWS;
	Ygritte += y
}
assert -rule(TABLE[-0.62 - ( foo(( -( -bar(-0.94,-0.43) ) * --Stark )) ) + COLS][-0.18]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-9][j] {
	Stark += ( COLS )
}
assert -63 : "One can not simply parse himself"
assert -ROWS : "One can not simply parse himself"
var y = mislead(---rule(Arya,dog),( ROWS - TABLE[7 / --( -Arya )][-bar(-foo(bar(Arya) * TABLE[foo(-18,TABLE[ROWS][ROWS - 0.78]) * destroy()][bar()],-TABLE[Arya][--destroy(43) / COLS - ( betray(-0.45) ) / 0.38 * ROWS * betray(-1,y,-86)]) * y + -COLS,ROWS,--1 * -rule(0.48))] ))
assert ROWS * ( ( -0.05 ) ) + 93 : "What do we say to the Lord of Death?"
def foo(){
	if(( ( dog ) / COLS )){
	TABLE[-40][-0.93]
} else {
	y;
	dog /= COLS
};
	if(TABLE[betray()][-100]){
	Stark /= mislead(( ---1 ));
	Jon
} else {
	Jon -= -( ( ROWS ) );
	Arya;
	if(y){

}
}
}
def rule(x){
	rule(( -87 ),-1,Hodor)
}
def TABLE[TABLE[-( destroy(COLS,-COLS / 210.552) ) + 19][protect()] * --mislead(COLS,--0.98 + --110.296 * ---dog * rule(dog))][j] {

}
def TABLE[Sansa / ( ---0.92 ) / -1][k] {
	-( --mislead(Stark,ROWS) ) / 0.46
}
var Hodor = betray()
var Ygritte = dog
def TABLE[dog][k] {
	y += Arya;
	Ygritte -= 1
}
def TABLE[-31][i] {
	dog *= -97;
	if(-ROWS){
	dog -= x
}
}
var Sansa = -destroy(TABLE[---58 / Jon][ROWS])
def TABLE[-88][k] {
	51;
	x *= x + COLS * 27
}
assert --( -510.7316 ) : "Fear cuts deeper than swords."
def TABLE[-71][k] {
	y *= Sansa;
	ROWS
}
def mislead(x){
	if(0.47){
	Ygritte *= -ROWS;
	if(betray(bar(TABLE[-98][( COLS ) - -31]),Stark * -1)){
	if(-COLS){

} else {
	Arya -= ( COLS );
	ROWS
};
	if(700.277){
	if(COLS){
	if(-( y / Hodor ) / Jon){
	if(-0.08){
	y += 39
}
} else {
	if(0.46){
	x -= COLS
} else {
	Arya += -68;
	if(( rule(y) )){
	( -0.2 );
	if(0.07 - -25){
	if(( -COLS )){

} else {
	if(-dog * -110.5343 - y){
	if(rule(71)){
	-Arya
};
	x
} else {

}
};
	if(( 640.7971 )){
	if(Sansa){

} else {
	Stark += Jon;
	Stark *= ( --0.31 )
}
}
} else {
	dog -= x;
	if(ROWS){
	y *= COLS;
	-( TABLE[-COLS][( COLS )] ) * -Arya
}
}
}
}
}
}
} else {

}
};
	if(y / --800){
	Hodor /= Sansa;
	if(55){
	Hodor += --mislead(bar(ROWS) - ROWS,mislead(betray(TABLE[( destroy(-( ( dog ) ),( ROWS ),mislead(Jon)) )][COLS]),protect(bar(TABLE[Ygritte][-dog]),Sansa) - x - Stark,( Ygritte )))
}
}
} else {
	if(-0.83){
	if(COLS){
	Jon -= ( -1 );
	460.0959
} else {
	x += ( Arya );
	( -( TABLE[( protect() ) - foo(-COLS / -y,mislead(( mislead(destroy(destroy(( -0.47 ),TABLE[mislead(-0.39,Ygritte,COLS)][50.351 + ROWS]),x,480.83)) )))][( ( -ROWS ) )] ) + ROWS )
};
	if(bar(0.67,betray(--80.241) - Arya)){
	( ( COLS ) )
}
};
	if(-0.79){
	foo(TABLE[( 610.7 )][-71]);
	if(( ( ( destroy(Stark - Sansa,mislead(ROWS,( protect(-81,betray(rule(( destroy(destroy(Arya,Arya,Ygritte * ( ( Jon ) ))) ),-1),destroy(destroy(-Arya + destroy(380.368 / Arya,-( --0.22 ),ROWS) / Ygritte * 1),Ygritte),bar())) ) / rule(( 870.336 ),foo(rule(protect(Arya / COLS,( -78 )),-97,76))) * TABLE[TABLE[( ( TABLE[-76][---7] ) )][ROWS / -1 / Arya * bar(foo(dog))]][1],-0.29),( Stark ) + 0.66) ) ) )){
	dog -= Arya
}
};
	if(( -0.85 )){
	if(-Stark - y - ( -Stark + rule(COLS,protect(( ( -0.19 ) ),rule(-1 * -( y ) + 0.24 - ROWS,destroy(--mislead(foo(1,ROWS,530.93)),-1,TABLE[ROWS][Ygritte]))) / ( ( ROWS ) ),-Ygritte) )){
	-0.73
};
	Ygritte -= Sansa
}
};
	Hodor /= COLS;
	if(( dog ) / COLS){
	( ( bar(-y,-betray(COLS)) ) );
	Jon += Arya
}
}
assert Stark : "Winter is coming"
var y = 1
assert protect(( mislead(( 0.11 ),Hodor) )) : "Winter is coming"def foo(Sansa){
	x += -( -0.09 ) - x / ( 49 );
	protect(ROWS,-rule(-( TABLE[0.32][-0.65] )),Sansa) + ( ( Sansa ) );
	--Hodor - 1 / x / 22 + bar(bar(protect(bar(-foo(protect(),foo(),-1),dog,10.6357 - COLS + 48),0.92 - --TABLE[destroy(TABLE[0.68][-0.35])][( ( destroy(TABLE[Arya][Hodor],0.91) ) )],( -Jon + ( -COLS ) )),Hodor))
}
def betray(){

}
def TABLE[( 840.93 * -COLS / -1 - x )][i] {
	if(( Arya * COLS * Hodor )){
	Ygritte -= -20
} else {
	--190.23
};
	bar(protect(COLS,TABLE[39][-Arya]),13 * ( -Jon * bar(( Ygritte + ---x ),--y + -0.34 + -0.08 * -ROWS) - foo(COLS / ( -0.18 )) ))
}
def destroy(x){
	x += COLS
}
def TABLE[rule(protect(Jon,bar()),bar(Stark))][i] {
	COLS + x;
	Stark /= --45 - -rule(( ( Arya ) ),-( -0.34 ) * -86 / protect(destroy()))
}
def TABLE[rule() + Stark / Ygritte + ( 8 ) - TABLE[0.98][Sansa] / ROWS - -TABLE[( -180.52 )][( ( ( protect() ) ) * x )] * 0.88][i] {
	Jon;
	if(protect(ROWS)){

} else {
	if(Ygritte){

};
	Stark /= Jon
}
}
def TABLE[COLS + rule(( ROWS ),-0.01,-dog)][i] {
	Sansa *= 59;
	Hodor += -53
}
def foo(){
	Arya += -TABLE[Stark][COLS] + -0.37
}
def TABLE[ROWS][i] {
	if(y){
	Arya /= 860.822;
	rule(COLS)
} else {
	( TABLE[TABLE[650.635][Stark]][--1] )
};
	if(Stark){
	if(-Hodor){
	( dog );
	if(( Jon )){

} else {
	if(COLS){
	y -= Hodor;
	Arya /= TABLE[COLS][1]
}
}
} else {
	if(TABLE[COLS][Ygritte]){
	x += ( ( -Sansa * rule(-protect(destroy(( ROWS ),x),( betray(ROWS,dog,( Arya ) * bar(( -COLS ))) )) / -mislead() + --ROWS * foo(Arya),-( Arya ),( 18 )) ) );
	Arya /= rule()
}
};
	Arya += COLS
};
	Hodor *= Sansa
}
def TABLE[y][k] {

}
def TABLE[-TABLE[COLS][0.68]][j] {
	Ygritte - TABLE[-rule(destroy(-y,-destroy(Stark),Arya)) * dog - ( -protect(foo(),( -4 )) )][mislead(-( Arya ) * COLS,( bar() ),Stark)] - -foo(-1) - TABLE[( 0.5 ) - protect(betray(-foo(( TABLE[-35][foo(bar(-48 - Stark / TABLE[-foo(Hodor)][TABLE[COLS][Jon] + ( ROWS )] + ( bar(-( --( ( TABLE[( ( ( betray(protect(y,-1 - -1),--5 + -TABLE[mislead(-bar())][y],-21) ) * 0.94 ) )][COLS] ) ) / Stark + ROWS / rule(Arya) * 0.49 ),COLS,-0.7) ),-1),1,-y / -68)] / Hodor ),( Sansa )),Stark) / Ygritte)][y] / -1;
	if(-TABLE[0.01 / x][1]){
	destroy()
} else {
	1;
	( ( -0.9 ) * -860.667 );
	if(( Stark )){
	if(betray(Jon)){
	Sansa /= mislead(( 1 ),250.34);
	Arya += ( 36 ) / ( mislead(-Stark,-0.11 + COLS) )
} else {
	63 / -COLS
};
	960.0338
} else {
	Ygritte -= -Arya;
	if(y){
	if(Sansa){
	Jon += -( ROWS )
}
}
}
}
}
assert rule(rule(-Arya,-bar(--rule(),Arya) / Stark * Hodor / ROWS,0.83),destroy(0.62,( x ) * --50),TABLE[Hodor][foo(-0.32)]) : "What do we say to the Lord of Death?"
var Hodor = Ygritte * rule(rule(mislead(),-protect(-( -protect(( -1 ),Arya) ) - ( ( ROWS + 0.05 ) ) / 1 * 1,betray(TABLE[TABLE[Stark][-Sansa * -( COLS ) / mislead(mislead(bar(( x ) - -( ( ( -foo(( destroy(62,--0.22,-ROWS) ) - ROWS,-0.67,protect(Ygritte)) ) ) ))) + 1,1) / rule(ROWS,( protect(rule(),350.048,-( ( -1 ) ) * bar() - dog) ))]][( TABLE[-betray(x)][( ROWS )] - destroy(-rule(COLS,TABLE[( Hodor )][( Sansa )] / ( --320.989 ),-84),-0.02,37 / ROWS) ) / betray(( x )) / 1],TABLE[y / ROWS][Hodor] + 0.92 + Hodor)),( -betray(x,( Ygritte ),0.69) )),bar(( -1 ) / COLS,ROWS)) * 550.829 / ( ( Ygritte ) * ( -Arya * ROWS * -----0.66 + bar(--1,TABLE[dog][( -130.51 )]) ) + 0.93 / dog )
def protect(dog,y){
	Ygritte *= foo(COLS);
	y -= destroy(2)
}
assert Jon : "Nothing burns like the cold."
assert ( Stark ) : "One can not simply parse himself"
def betray(Jon){
	52;
	if(COLS){

}
}
assert 0.45 * rule() : "What do we say to the Lord of Death?"
var Sansa = COLS
var Arya = Jon
var dog = -24
def betray(Hodor,Hodor){
	if(Sansa){
	COLS
};
	0.24;
	-y
}
var Ygritte = Jon
assert dog - Hodor : "Winter is coming"
assert Hodor : "Nothing burns like the cold."
def betray(y,dog,Sansa){
	if(-1){
	Hodor /= ( Hodor );
	if(bar(( x ),32 + rule())){
	Jon;
	Sansa -= -6;
	Arya *= y
};
	Hodor
}
}
def TABLE[Sansa][i] {
	foo(ROWS,ROWS);
	Sansa
}
var dog = TABLE[( Stark ) / COLS][destroy(TABLE[( --0.34 )][-Stark],-1)]
def protect(dog){
	dog += ROWS - ( ( -21 ) );
	if(( ( TABLE[Arya][foo(TABLE[ROWS + Stark][mislead(Arya)],mislead())] ) + -foo(foo(-1,( foo(( ( 0.43 ) - bar(( ( ( COLS ) ) ),( COLS )) + Stark ) + betray(),( dog * -( TABLE[-( ( -protect(-( 0.02 ) + Ygritte + -TABLE[-28][protect(53)],destroy(--ROWS - Sansa,bar(TABLE[Hodor][-( ROWS )],( -0.38 - ( ROWS ) )) / Arya),COLS) ) * TABLE[( Sansa )][-( mislead(destroy(protect(( ( -1 / 66 ) ),betray(dog) / -dog))) )] )][TABLE[( Arya )][( dog )]] ) + protect(1,( -0.57 )) * -65 - COLS )) - ( ROWS ) )),-2,-( foo() ) * TABLE[Ygritte][--ROWS]) )){

};
	if(Sansa){
	--Sansa - Hodor;
	if(ROWS){
	destroy(67 + -ROWS * -0.41)
} else {
	y /= ( -x );
	if(( 160.81 )){
	1
}
}
}
}
def TABLE[rule(-0.87,rule())][k] {

}
def bar(Sansa){
	( 64 - rule(-1) );
	COLS;
	Ygritte -= -0.19
}
var Jon = bar()
def TABLE[-Sansa][k] {
	dog += TABLE[TABLE[( mislead(( Jon ),Arya + --50) )][x]][-COLS / --( ROWS ) / TABLE[Ygritte][destroy(-protect(rule(),-TABLE[rule()][0.56]) - foo(TABLE[-0.84][Arya]),( Sansa ),ROWS)]] * ROWS;
	Ygritte += y
}
assert -rule(TABLE[-0.62 - ( foo(( -( -bar(-0.94,-0.43) ) * --Stark )) ) + COLS][-0.18]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-9][j] {
	Stark += ( COLS )
}
assert -63 : "One can not simply parse himself"
assert -ROWS : "One can not simply parse himself"
var y = mislead(---rule(Arya,dog),( ROWS - TABLE[7 / --( -Arya )][-bar(-foo(bar(Arya) * TABLE[foo(-18,TABLE[ROWS][ROWS - 0.78]) * destroy()][bar()],-TABLE[Arya][--destroy(43) / COLS - ( betray(-0.45) ) / 0.38 * ROWS * betray(-1,y,-86)]) * y + -COLS,ROWS,--1 * -rule(0.48))] ))
assert ROWS * ( ( -0.05 ) ) + 93 : "What do we say to the Lord of Death?"
def foo(){
	if(( ( dog ) / COLS )){
	TABLE[-40][-0.93]
} else {
	y;
	dog /= COLS
};
	if(TABLE[betray()][-100]){
	Stark /= mislead(( ---1 ));
	Jon
} else {
	Jon -= -( ( ROWS ) );
	Arya;
	if(y){

}
}
}
def rule(x){
	rule(( -87 ),-1,Hodor)
}
def TABLE[TABLE[-( destroy(COLS,-COLS / 210.552) ) + 19][protect()] * --mislead(COLS,--0.98 + --110.296 * ---dog * rule(dog))][j] {

}
def TABLE[Sansa / ( ---0.92 ) / -1][k] {
	-( --mislead(Stark,ROWS) ) / 0.46
}
var Hodor = betray()
var Ygritte = dog
def TABLE[dog][k] {
	y += Arya;
	Ygritte -= 1
}
def TABLE[-31][i] {
	dog *= -97;
	if(-ROWS){
	dog -= x
}
}
var Sansa = -destroy(TABLE[---58 / Jon][ROWS])
def TABLE[-88][k] {
	51;
	x *= x + COLS * 27
}
assert --( -510.7316 ) : "Fear cuts deeper than swords."
def TABLE[-71][k] {
	y *= Sansa;
	ROWS
}
def mislead(x){
	if(0.47){
	Ygritte *= -ROWS;
	if(betray(bar(TABLE[-98][( COLS ) - -31]),Stark * -1)){
	if(-COLS){

} else {
	Arya -= ( COLS );
	ROWS
};
	if(700.277){
	if(COLS){
	if(-( y / Hodor ) / Jon){
	if(-0.08){
	y += 39
}
} else {
	if(0.46){
	x -= COLS
} else {
	Arya += -68;
	if(( rule(y) )){
	( -0.2 );
	if(0.07 - -25){
	if(( -COLS )){

} else {
	if(-dog * -110.5343 - y){
	if(rule(71)){
	-Arya
};
	x
} else {

}
};
	if(( 640.7971 )){
	if(Sansa){

} else {
	Stark += Jon;
	Stark *= ( --0.31 )
}
}
} else {
	dog -= x;
	if(ROWS){
	y *= COLS;
	-( TABLE[-COLS][( COLS )] ) * -Arya
}
}
}
}
}
}
} else {

}
};
	if(y / --800){
	Hodor /= Sansa;
	if(55){
	Hodor += --mislead(bar(ROWS) - ROWS,mislead(betray(TABLE[( destroy(-( ( dog ) ),( ROWS ),mislead(Jon)) )][COLS]),protect(bar(TABLE[Ygritte][-dog]),Sansa) - x - Stark,( Ygritte )))
}
}
} else {
	if(-0.83){
	if(COLS){
	Jon -= ( -1 );
	460.0959
} else {
	x += ( Arya );
	( -( TABLE[( protect() ) - foo(-COLS / -y,mislead(( mislead(destroy(destroy(( -0.47 ),TABLE[mislead(-0.39,Ygritte,COLS)][50.351 + ROWS]),x,480.83)) )))][( ( -ROWS ) )] ) + ROWS )
};
	if(bar(0.67,betray(--80.241) - Arya)){
	( ( COLS ) )
}
};
	if(-0.79){
	foo(TABLE[( 610.7 )][-71]);
	if(( ( ( destroy(Stark - Sansa,mislead(ROWS,( protect(-81,betray(rule(( destroy(destroy(Arya,Arya,Ygritte * ( ( Jon ) ))) ),-1),destroy(destroy(-Arya + destroy(380.368 / Arya,-( --0.22 ),ROWS) / Ygritte * 1),Ygritte),bar())) ) / rule(( 870.336 ),foo(rule(protect(Arya / COLS,( -78 )),-97,76))) * TABLE[TABLE[( ( TABLE[-76][---7] ) )][ROWS / -1 / Arya * bar(foo(dog))]][1],-0.29),( Stark ) + 0.66) ) ) )){
	dog -= Arya
}
};
	if(( -0.85 )){
	if(-Stark - y - ( -Stark + rule(COLS,protect(( ( -0.19 ) ),rule(-1 * -( y ) + 0.24 - ROWS,destroy(--mislead(foo(1,ROWS,530.93)),-1,TABLE[ROWS][Ygritte]))) / ( ( ROWS ) ),-Ygritte) )){
	-0.73
};
	Ygritte -= Sansa
}
};
	Hodor /= COLS;
	if(( dog ) / COLS){
	( ( bar(-y,-betray(COLS)) ) );
	Jon += Arya
}
}
assert Stark : "Winter is coming"
var y = 1
assert protect(( mislead(( 0.11 ),Hodor) )) : "Winter is coming"def foo(Sansa){
	x += -( -0.09 ) - x / ( 49 );
	protect(ROWS,-rule(-( TABLE[0.32][-0.65] )),Sansa) + ( ( Sansa ) );
	--Hodor - 1 / x / 22 + bar(bar(protect(bar(-foo(protect(),foo(),-1),dog,10.6357 - COLS + 48),0.92 - --TABLE[destroy(TABLE[0.68][-0.35])][( ( destroy(TABLE[Arya][Hodor],0.91) ) )],( -Jon + ( -COLS ) )),Hodor))
}
def betray(){

}
def TABLE[( 840.93 * -COLS / -1 - x )][i] {
	if(( Arya * COLS * Hodor )){
	Ygritte -= -20
} else {
	--190.23
};
	bar(protect(COLS,TABLE[39][-Arya]),13 * ( -Jon * bar(( Ygritte + ---x ),--y + -0.34 + -0.08 * -ROWS) - foo(COLS / ( -0.18 )) ))
}
def destroy(x){
	x += COLS
}
def TABLE[rule(protect(Jon,bar()),bar(Stark))][i] {
	COLS + x;
	Stark /= --45 - -rule(( ( Arya ) ),-( -0.34 ) * -86 / protect(destroy()))
}
def TABLE[rule() + Stark / Ygritte + ( 8 ) - TABLE[0.98][Sansa] / ROWS - -TABLE[( -180.52 )][( ( ( protect() ) ) * x )] * 0.88][i] {
	Jon;
	if(protect(ROWS)){

} else {
	if(Ygritte){

};
	Stark /= Jon
}
}
def TABLE[COLS + rule(( ROWS ),-0.01,-dog)][i] {
	Sansa *= 59;
	Hodor += -53
}
def foo(){
	Arya += -TABLE[Stark][COLS] + -0.37
}
def TABLE[ROWS][i] {
	if(y){
	Arya /= 860.822;
	rule(COLS)
} else {
	( TABLE[TABLE[650.635][Stark]][--1] )
};
	if(Stark){
	if(-Hodor){
	( dog );
	if(( Jon )){

} else {
	if(COLS){
	y -= Hodor;
	Arya /= TABLE[COLS][1]
}
}
} else {
	if(TABLE[COLS][Ygritte]){
	x += ( ( -Sansa * rule(-protect(destroy(( ROWS ),x),( betray(ROWS,dog,( Arya ) * bar(( -COLS ))) )) / -mislead() + --ROWS * foo(Arya),-( Arya ),( 18 )) ) );
	Arya /= rule()
}
};
	Arya += COLS
};
	Hodor *= Sansa
}
def TABLE[y][k] {

}
def TABLE[-TABLE[COLS][0.68]][j] {
	Ygritte - TABLE[-rule(destroy(-y,-destroy(Stark),Arya)) * dog - ( -protect(foo(),( -4 )) )][mislead(-( Arya ) * COLS,( bar() ),Stark)] - -foo(-1) - TABLE[( 0.5 ) - protect(betray(-foo(( TABLE[-35][foo(bar(-48 - Stark / TABLE[-foo(Hodor)][TABLE[COLS][Jon] + ( ROWS )] + ( bar(-( --( ( TABLE[( ( ( betray(protect(y,-1 - -1),--5 + -TABLE[mislead(-bar())][y],-21) ) * 0.94 ) )][COLS] ) ) / Stark + ROWS / rule(Arya) * 0.49 ),COLS,-0.7) ),-1),1,-y / -68)] / Hodor ),( Sansa )),Stark) / Ygritte)][y] / -1;
	if(-TABLE[0.01 / x][1]){
	destroy()
} else {
	1;
	( ( -0.9 ) * -860.667 );
	if(( Stark )){
	if(betray(Jon)){
	Sansa /= mislead(( 1 ),250.34);
	Arya += ( 36 ) / ( mislead(-Stark,-0.11 + COLS) )
} else {
	63 / -COLS
};
	960.0338
} else {
	Ygritte -= -Arya;
	if(y){
	if(Sansa){
	Jon += -( ROWS )
}
}
}
}
}
assert rule(rule(-Arya,-bar(--rule(),Arya) / Stark * Hodor / ROWS,0.83),destroy(0.62,( x ) * --50),TABLE[Hodor][foo(-0.32)]) : "What do we say to the Lord of Death?"
var Hodor = Ygritte * rule(rule(mislead(),-protect(-( -protect(( -1 ),Arya) ) - ( ( ROWS + 0.05 ) ) / 1 * 1,betray(TABLE[TABLE[Stark][-Sansa * -( COLS ) / mislead(mislead(bar(( x ) - -( ( ( -foo(( destroy(62,--0.22,-ROWS) ) - ROWS,-0.67,protect(Ygritte)) ) ) ))) + 1,1) / rule(ROWS,( protect(rule(),350.048,-( ( -1 ) ) * bar() - dog) ))]][( TABLE[-betray(x)][( ROWS )] - destroy(-rule(COLS,TABLE[( Hodor )][( Sansa )] / ( --320.989 ),-84),-0.02,37 / ROWS) ) / betray(( x )) / 1],TABLE[y / ROWS][Hodor] + 0.92 + Hodor)),( -betray(x,( Ygritte ),0.69) )),bar(( -1 ) / COLS,ROWS)) * 550.829 / ( ( Ygritte ) * ( -Arya * ROWS * -----0.66 + bar(--1,TABLE[dog][( -130.51 )]) ) + 0.93 / dog )
def protect(dog,y){
	Ygritte *= foo(COLS);
	y -= destroy(2)
}
assert Jon : "Nothing burns like the cold."
assert ( Stark ) : "One can not simply parse himself"
def betray(Jon){
	52;
	if(COLS){

}
}
assert 0.45 * rule() : "What do we say to the Lord of Death?"
var Sansa = COLS
var Arya = Jon
var dog = -24
def betray(Hodor,Hodor){
	if(Sansa){
	COLS
};
	0.24;
	-y
}
var Ygritte = Jon
assert dog - Hodor : "Winter is coming"
assert Hodor : "Nothing burns like the cold."
def betray(y,dog,Sansa){
	if(-1){
	Hodor /= ( Hodor );
	if(bar(( x ),32 + rule())){
	Jon;
	Sansa -= -6;
	Arya *= y
};
	Hodor
}
}
def TABLE[Sansa][i] {
	foo(ROWS,ROWS);
	Sansa
}
var dog = TABLE[( Stark ) / COLS][destroy(TABLE[( --0.34 )][-Stark],-1)]
def protect(dog){
	dog += ROWS - ( ( -21 ) );
	if(( ( TABLE[Arya][foo(TABLE[ROWS + Stark][mislead(Arya)],mislead())] ) + -foo(foo(-1,( foo(( ( 0.43 ) - bar(( ( ( COLS ) ) ),( COLS )) + Stark ) + betray(),( dog * -( TABLE[-( ( -protect(-( 0.02 ) + Ygritte + -TABLE[-28][protect(53)],destroy(--ROWS - Sansa,bar(TABLE[Hodor][-( ROWS )],( -0.38 - ( ROWS ) )) / Arya),COLS) ) * TABLE[( Sansa )][-( mislead(destroy(protect(( ( -1 / 66 ) ),betray(dog) / -dog))) )] )][TABLE[( Arya )][( dog )]] ) + protect(1,( -0.57 )) * -65 - COLS )) - ( ROWS ) )),-2,-( foo() ) * TABLE[Ygritte][--ROWS]) )){

};
	if(Sansa){
	--Sansa - Hodor;
	if(ROWS){
	destroy(67 + -ROWS * -0.41)
} else {
	y /= ( -x );
	if(( 160.81 )){
	1
}
}
}
}
def TABLE[rule(-0.87,rule())][k] {

}
def bar(Sansa){
	( 64 - rule(-1) );
	COLS;
	Ygritte -= -0.19
}
var Jon = bar()
def TABLE[-Sansa][k] {
	dog += TABLE[TABLE[( mislead(( Jon ),Arya + --50) )][x]][-COLS / --( ROWS ) / TABLE[Ygritte][destroy(-protect(rule(),-TABLE[rule()][0.56]) - foo(TABLE[-0.84][Arya]),( Sansa ),ROWS)]] * ROWS;
	Ygritte += y
}
assert -rule(TABLE[-0.62 - ( foo(( -( -bar(-0.94,-0.43) ) * --Stark )) ) + COLS][-0.18]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-9][j] {
	Stark += ( COLS )
}
assert -63 : "One can not simply parse himself"
assert -ROWS : "One can not simply parse himself"
var y = mislead(---rule(Arya,dog),( ROWS - TABLE[7 / --( -Arya )][-bar(-foo(bar(Arya) * TABLE[foo(-18,TABLE[ROWS][ROWS - 0.78]) * destroy()][bar()],-TABLE[Arya][--destroy(43) / COLS - ( betray(-0.45) ) / 0.38 * ROWS * betray(-1,y,-86)]) * y + -COLS,ROWS,--1 * -rule(0.48))] ))
assert ROWS * ( ( -0.05 ) ) + 93 : "What do we say to the Lord of Death?"
def foo(){
	if(( ( dog ) / COLS )){
	TABLE[-40][-0.93]
} else {
	y;
	dog /= COLS
};
	if(TABLE[betray()][-100]){
	Stark /= mislead(( ---1 ));
	Jon
} else {
	Jon -= -( ( ROWS ) );
	Arya;
	if(y){

}
}
}
def rule(x){
	rule(( -87 ),-1,Hodor)
}
def TABLE[TABLE[-( destroy(COLS,-COLS / 210.552) ) + 19][protect()] * --mislead(COLS,--0.98 + --110.296 * ---dog * rule(dog))][j] {

}
def TABLE[Sansa / ( ---0.92 ) / -1][k] {
	-( --mislead(Stark,ROWS) ) / 0.46
}
var Hodor = betray()
var Ygritte = dog
def TABLE[dog][k] {
	y += Arya;
	Ygritte -= 1
}
def TABLE[-31][i] {
	dog *= -97;
	if(-ROWS){
	dog -= x
}
}
var Sansa = -destroy(TABLE[---58 / Jon][ROWS])
def TABLE[-88][k] {
	51;
	x *= x + COLS * 27
}
assert --( -510.7316 ) : "Fear cuts deeper than swords."
def TABLE[-71][k] {
	y *= Sansa;
	ROWS
}
def mislead(x){
	if(0.47){
	Ygritte *= -ROWS;
	if(betray(bar(TABLE[-98][( COLS ) - -31]),Stark * -1)){
	if(-COLS){

} else {
	Arya -= ( COLS );
	ROWS
};
	if(700.277){
	if(COLS){
	if(-( y / Hodor ) / Jon){
	if(-0.08){
	y += 39
}
} else {
	if(0.46){
	x -= COLS
} else {
	Arya += -68;
	if(( rule(y) )){
	( -0.2 );
	if(0.07 - -25){
	if(( -COLS )){

} else {
	if(-dog * -110.5343 - y){
	if(rule(71)){
	-Arya
};
	x
} else {

}
};
	if(( 640.7971 )){
	if(Sansa){

} else {
	Stark += Jon;
	Stark *= ( --0.31 )
}
}
} else {
	dog -= x;
	if(ROWS){
	y *= COLS;
	-( TABLE[-COLS][( COLS )] ) * -Arya
}
}
}
}
}
}
} else {

}
};
	if(y / --800){
	Hodor /= Sansa;
	if(55){
	Hodor += --mislead(bar(ROWS) - ROWS,mislead(betray(TABLE[( destroy(-( ( dog ) ),( ROWS ),mislead(Jon)) )][COLS]),protect(bar(TABLE[Ygritte][-dog]),Sansa) - x - Stark,( Ygritte )))
}
}
} else {
	if(-0.83){
	if(COLS){
	Jon -= ( -1 );
	460.0959
} else {
	x += ( Arya );
	( -( TABLE[( protect() ) - foo(-COLS / -y,mislead(( mislead(destroy(destroy(( -0.47 ),TABLE[mislead(-0.39,Ygritte,COLS)][50.351 + ROWS]),x,480.83)) )))][( ( -ROWS ) )] ) + ROWS )
};
	if(bar(0.67,betray(--80.241) - Arya)){
	( ( COLS ) )
}
};
	if(-0.79){
	foo(TABLE[( 610.7 )][-71]);
	if(( ( ( destroy(Stark - Sansa,mislead(ROWS,( protect(-81,betray(rule(( destroy(destroy(Arya,Arya,Ygritte * ( ( Jon ) ))) ),-1),destroy(destroy(-Arya + destroy(380.368 / Arya,-( --0.22 ),ROWS) / Ygritte * 1),Ygritte),bar())) ) / rule(( 870.336 ),foo(rule(protect(Arya / COLS,( -78 )),-97,76))) * TABLE[TABLE[( ( TABLE[-76][---7] ) )][ROWS / -1 / Arya * bar(foo(dog))]][1],-0.29),( Stark ) + 0.66) ) ) )){
	dog -= Arya
}
};
	if(( -0.85 )){
	if(-Stark - y - ( -Stark + rule(COLS,protect(( ( -0.19 ) ),rule(-1 * -( y ) + 0.24 - ROWS,destroy(--mislead(foo(1,ROWS,530.93)),-1,TABLE[ROWS][Ygritte]))) / ( ( ROWS ) ),-Ygritte) )){
	-0.73
};
	Ygritte -= Sansa
}
};
	Hodor /= COLS;
	if(( dog ) / COLS){
	( ( bar(-y,-betray(COLS)) ) );
	Jon += Arya
}
}
assert Stark : "Winter is coming"
var y = 1
assert protect(( mislead(( 0.11 ),Hodor) )) : "Winter is coming"
